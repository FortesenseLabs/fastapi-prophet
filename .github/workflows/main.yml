name: Continuous Integration and Delivery

on:
  push:
    branches: [master]

env:
  IMAGE: ghcr.io/${{ github.repository }}/web-app
#   IMAGE: docker.pkg.github.com/$(echo $GITHUB_REPOSITORY | tr '[A-Z]' '[a-z]')/web-prophet

jobs:

#   build:
#     name: Build Docker Image
#     runs-on: ubuntu-18.04
#     steps:
#       - name: Checkout master
#         uses: actions/checkout@v2

#       - name: Set up Docker Buildx
#         id: buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Login to Registry
#         uses: docker/login-action@v1
#         with:
#           # registry: docker.pkg.github.com
#           registry: ghcr.io
#           username: ${{ github.repository_owner }}
#           password: ${{ secrets.CR_PAT }}

#       - name: Build and Push to GhCR
#         id: docker_build
#         uses: docker/build-push-action@v2
#         with:
#           context: ./project
#           file: ./project/Dockerfile.prod
#           push: true
#           tags: ${{ env.IMAGE }}:latest
#       - name: Image digest
#         run: echo ${{ steps.docker_build.outputs.digest }}

  test:
    name: Test Docker Image
    runs-on: ubuntu-18.04
#     needs: build
    steps:
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          # registry: docker.pkg.github.com
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Pull images
        run: |
          docker pull ${{ env.IMAGE }}:latest || true

      - name: Run container
        run: |
          docker run \
            -d \
            --name prophet \
            -e PORT=8765 \
            -e ENVIRONMENT=dev \
            -e DATABASE_TEST_URL=sqlite:///sqlite.db \
            -p 5003:8765 \
            ${{ env.IMAGE }}:latest

      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT

      - name: Install requirements
#         run: docker exec prophet pip install black
        run: |
          docker logs ${{ job.container.id }}
#          docker exec prophet pip list
#         run: docker exec prophet pip install -r project/requirements-dev.in

      - name: Pytest
        run: docker exec prophet pytest . -p no:warnings -vv

      - name: Flake8
        run: docker exec prophet python -m flake8 .

      - name: Black
        run: docker exec prophet python -m black . --check

      - name: isort
        run: docker exec prophet python -m isort . --check-only


#   test:
#     name: Test Docker Image
#     runs-on: ubuntu-18.04
#     needs: build
#     steps:
#       - name: Checkout master
#         uses: actions/checkout@v2
#       - name: Log in to GitHub Packages
#         run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       - name: Pull images
#         run: |
#           docker pull ${{ env.IMAGE }}-builder:latest || true
#           docker pull ${{ env.IMAGE }}-final:latest || true
#       - name: Build images
#         run: |
#           docker build \
#             --target builder \
#             --cache-from ${{ env.IMAGE }}-builder:latest \
#             --tag ${{ env.IMAGE }}-builder:latest \
#             --file ./project/Dockerfile.prod \
#             "./project"
#           docker build \
#             --cache-from ${{ env.IMAGE }}-final:latest \
#             --tag ${{ env.IMAGE }}-final:latest \
#             --file ./project/Dockerfile.prod \
#             "./project"
#       - name: Run container
#         run: |
#           docker run \
#             -d \
#             --name prophet \
#             -e PORT=8765 \
#             -e ENVIRONMENT=dev \
#             -e DATABASE_TEST_URL=sqlite:///sqlite.db \
#             -p 5003:8765 \
#             ${{ env.IMAGE }}-final:latest
#       - name: Install requirements
#         run: docker exec prophet pip install -r project/requirements-dev.in
#       - name: Pytest
#         run: docker exec prophet pytest . -p no:warnings -vv
#       - name: Flake8
#         run: docker exec prophet python -m flake8 .
#       - name: Black
#         run: docker exec prophet python -m black . --check
#       - name: isort
#         run: docker exec prophet python -m isort . --check-only
